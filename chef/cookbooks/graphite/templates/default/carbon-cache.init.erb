#!/usr/bin/env bash
#
# carbon-cache
#
# chkconfig:   - 57 47
# description: carbon-cache
# processname: carbon-cache


export CC_HOME="<%= @dir %>"
export PIDFILE="$CC_HOME/storage/carbon-cache-a.pid"
export CC_CONFIG="$CC_HOME/etc/carbon-cache.conf"
CC_USER="<%= @user %>"
LOGDIR="/var/log/carbon-cache"
CC_LOG="$LOGDIR/carbon-cache.log"
BIN_SCRIPT="python $CC_HOME/bin/carbon-cache.py start >> $CC_LOG 2>&1"

. /etc/init.d/functions

start() {

  if [ ! -d "$LOGDIR" ] ; then
    mkdir "$LOGDIR"
  fi

  chown -R $CC_USER:$CC_USER $LOGDIR
  
  if [ -f $PIDFILE ]; then
    echo -e "\033[31;1mPID file found in $PIDFILE, already running?\033[0m"
    lj_pid="$(cat $PIDFILE)"
    pid_running="$( ps ax | grep 'carbon-cache' | grep $lj_pid )"

    if [ ! -z "$pid_running" ] ; then
      echo -e "\033[31;1mPID $lj_pid still alive, carbon-cache is already running. Doing nothing\033[0m"
      return 0
    fi
  fi

  echo -e "\033[1mStarting carbon-cache...\033[0m"
  daemon --user $CC_USER $BIN_SCRIPT
  result=$?

  if [ $result -ne 0 ] ; then
    failure
    echo -e "Carbon-Cache did not start successfully"
    echo "See $CC_LOG for details"
    exit 1
  else
    success
    echo -e "Carbon-Cache started successfully"
  fi

}



function stop() {
  echo -n -e "\033[1mStopping carbon-cache...\033[0m"

  if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=5
  fi

  if [ ! -z "$PIDFILE" ]; then
    if [ -f "$PIDFILE" ]; then
      kill -0 `cat $PIDFILE` >/dev/null 2>&1
      if [ $? -gt 0 ]; then
        echo "PID file ($PIDFILE) found but no matching process was found. Nothing to do."
        return 0
      fi
    else
      echo "PID file ($PIDFILE) does not exist. Assuming process has stopped."
      return 0
    fi
  fi

  PID=`cat $PIDFILE`
  kill $PID >/dev/null 2>&1

  if [ ! -z "$PIDFILE" ]; then
    if [ -f "$PIDFILE" ]; then
      while [ $SHUTDOWN_WAIT -ge 0 ]; do
        kill -0 $PID >/dev/null 2>&1
        if [ $? -gt 0 ]; then
          success
          echo -e "Carbon-Cache stopped successfully"
          break
        fi
        if [ $SHUTDOWN_WAIT -gt 0 ]; then
          sleep 1
        fi
        SHUTDOWN_WAIT=`expr $SHUTDOWN_WAIT - 1 `
      done
      # still not dead, we may need to resort to drastic measures
      if [ -f "$PIDFILE" ]; then
        kill -0 $PID >/dev/null 2>&1
        if [ $? -eq 0 ]; then
          echo "Application still alive, sleeping for 20 seconds before sending SIGKILL"
          sleep 20
          kill -0 $PID >/dev/null 2>&1
          if [ $? -eq 0 ]; then
            kill -9 $PID >/dev/null 2>&1
            echo "Killed with extreme prejudice"
          else
            echo "Application stopped, no need to use SIGKILL"
          fi
          rm $PIDFILE
        fi
      fi
    fi
  fi
}

restart() {
  stop
  start
}

status() {
  # GOT PIDFILE?
  [ -f $PIDFILE ] && pid=$(cat $PIDFILE)

  # RUNNING
  if [[ $pid && -d "/proc/$pid" ]]; then
    success
    echo -e "Carbon-Cache is running with pid $pid"
  fi

  # NOT RUNNING
  if [[ ! $pid || ! -d "/proc/$pid" ]]; then
    echo "Carbon-Cache not running"
  fi

  # STALE PID FOUND
  if [[ ! -d "/proc/$pid" && -f $PIDFILE ]]; then
    echo -e "\033[1;31;40m[!] Stale PID found in $PIDFILE\033[0m"
  fi
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
    status $2
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status [-v]|}"
    exit 1
esac

exit $?
